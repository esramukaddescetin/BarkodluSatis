<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BTNAra.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAIGNIUk0AAHomAACAhAAA+gAAAIDoAAB1
        MAAA6mAAADqYAAAXcJy6UTwAAAAHdElNRQfnCBAQKDG3WZAkAAADiElEQVRYR72XW4hNYRTHZRglcmko
        RWKERJQSGY/ulHuDkgjlVpoJLyhFnvDEg3vkQQkPHig8kFvudw9kRB7cL+PO8fvt1ihlzt5nOPOvX539
        fevb67uttfZpUp9yuVwLmAw74Ta8gM/wGE7CSugV5v9PvLQpzIEaeA8HYQlMgFEwCzbATfgB+6BbDP83
        8aJWcAjewRpoHYyHpbAcZkPfsB8GZ+ANjEle0lDxAp1fhvvQG7rCLvgC7sQNOAuPQGk3E0pgLXyDWfG6
        wsRAt/0w+NL2MA7chXMwFlqEaSKeu8E6+ABHwF1aDE62Isyyi0GeuQ5duc5dzWpwYlPhGDyH4zEkEc89
        4R6chlLYDi6iNEzShbG33Qvnmbvtb0HnruoofIStMAV6xLDfoq0TPIFN4O69hsXRnS6MDTVXr0NDzm33
        XN1aV1MepvUKmzHwFbqD9+FqdKULY50aak7AOPfMJ4Er7xlmqcL2Eui8P6ju0ZVfGJpkjHNDzdvukWyB
        jWGSSdivggvx+yVMTDrSFMau2Di/Hs0Fi7Ee5fP4bchWJR1pwvATjIQVcD7azHRdEoOMwn401MZv71F1
        0pEmDI0A06sZribaDMv2iUFGYT8XHsTvhzA/6UgThqfAFfcBlXrr/ybG7YX90AaMiKHRlV8YWtVuxe+7
        sD7pKECM6QCG8jQwcXmZW0Z3fmHYC6xqFpYZYHrNHH4KezPgLTB/nIDd0ZVNDLCkWtWagTXB9NopuvMK
        u2Vg/hgMXmbTeFItM4sBFhdLqonEhORknkK9JZa+MnDlOq+EzvAMdoZJYWKg6fQ7WNUsLJvBy2SGM8mY
        K/wgMUL2gGd+B4aAzq+Bi7AWDIIRUBavzyYGGI6WVFfWDsrBsuskTFj2GbYHYDp45k7KlevYwrQNauEn
        eC86xuuziQEVYBHyhR7JgOj6LdoMNauj34aeuR8u2uu8CtzJeXABGjSJ5rAIroJy9X4D+kVkktGpoeZR
        9Isxbrsr13lltDnRK1D4JOrEQC+o518NpusFMBT+iHOeh4OaF022DYRXQcMnkUW83KjQidvuyuucezx+
        qFyEok+iYzhx2+ucN42+ttCok3ACfxQ0nht9EjprG82JfI52+9tF8/8XL0+bhB8tO6KpOMJBvklYNZMv
        qKIKJ3+dBL8XwsN4LK5wVDcJt92V69xLujxMii+cWVt2gH/zzab80c2V/AJwXXp/OHcTNQAAAABJRU5E
        rkJggg==
</value>
  </data>
</root>